overview ToDoSpark {
  name: "Spark_FrontEnd_ToDo"
  description: "Features e Fixes a serem trabalhados no Spark - Front-End"
  purpose: "Garantir a publicação de um gerador de códigos front-end sem erros, criar uma lib que será herdada para reduzir redundâncias entre spark-lib e andes-lib e utilizar ferramentas de CI para integrar as alterações em produção automáticamente."
  miniworld: "Usuários podem utilizar o gerador de código front-end documentado em assinaturas de classes, métodos, argumentos de métodos, etc, à medida que forem necessárias para o entendimento da entidade que foi modelada. "
  Architecture: python
}

requirements Requirements {
    name: "ToDoSpark Requirements"
    description: "Requisitos a serem implementados no Spark - Front-End"

    functional_requirement RF01 {
        description: "O sistema deve permitir que usuários gerem código front-end em Vue.js a partir da leitura de um arquivo .spark, garantindo documentação em trechos pertinentes para um melhor entendimento do código."
        priority: "High"
    }


    functional_requirement RF02 {
        description: "O sistema deve, automaticamente, por meio de ferramentas CI integradas ao GitHub e ao GitLab, garantir que o código tenha o seu funcionamento normal devidamente testado, de modo que, caso os testes sejam validados, as alterações e a consequente nova versão sejam publicadas automaticamente."
        priority: "High"
        depend: Requirements.RF01
    }

    non_functional_requirement RNF01 {
        description: "A interface front-end gerada pelo sistema não deve possuir elementos depreciados, quebrados ou sem razão de ser."
        priority: "High"
    }

    non_functional_requirement RNF02 {
        description: "O front-end deverá permanecer em Vue.js"
        priority: "High"
    }

    non_functional_requirement RNF03 {
        description: "O gerador que gerará arquivos de CI deverá ser feito em python"
        priority: "High"
    }
    
    non_functional_requirement RNF05 {
        description: "Os arquivos de CI gerados serão 2: um adequado ao CI mediante GitHub e outro adequado ao CI mediante GitLab"
        priority: "High"
    }
    
    non_functional_requirement RNF06 {
        description: "O Sistema deverá possuir estruturas herdadas de uma classe pai para evitar duplicações existentes dessas mesmas estruturas no spark-lib e no andes-lib (preferencialmente, chamando-se module-doc-lib)"
        priority: "Medium"
    }
}
   

usecase AtualizarRepoRemoto {
    name: "Publicação simultânea com atualização testada do código versionado"
    description: "Realiza publicação via ferramentas integradas ao GitHub e ao GitLab do código atualizado nestas plataformas caso seja aprovado em testes e etapas intermediárias"
    requirements: Requirements.RF01, Requirements.RNF01, RNF03, RNF05, RNF02
}

usecase GerarCodigoDocumentado {
    name: "Gera código front-end documentado"
    description: "O usuário, a partir de um .spark, consegue gerar código front-end orientado a objetos com comentários para métodos, argumentos, classes, etc. que poderiam, sem elas, ser confusas"
    requirements: Requirements.RF01, Requirements.RNF01
}
